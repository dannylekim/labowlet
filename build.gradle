buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.danken'
version = '0.0.10-SNAPSHOT'
sourceCompatibility = '12'

repositories {
	mavenCentral()
}

bootJar {
	launchScript()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6")
	runtime('org.springframework.boot:spring-boot-devtools')
	compile group: 'javax.inject', name: 'javax.inject', version: '1'
	compile('org.springframework.session:spring-session-core')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntime('org.junit.jupiter:junit-jupiter-engine')
	compileOnly 'org.projectlombok:lombok:1.18.2'
}

test {
	useJUnitPlatform()

	beforeTest { descriptor ->
    	logger.lifecycle("Running test: " + descriptor)
	}
	
	afterTest { descriptor, result -> 
		logger.lifecycle("Result: " + result)
	}
}
